// Prisma Client 생성 설정
generator client {
  provider = "prisma-client-js"
}

// 데이터베이스 연결 설정 (supabase, prisma)
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")  
  directUrl  = env("DIRECT_URL")    
}

// ──────────────────────────────────────────────────────────────────────────────

// 유저
model User {
  id        String   @id @default(uuid())   // UUID 자동 생성
  email     String   @unique                // 로그인용 이메일(고유)
  username  String                          // 화면에 표시할 사용자명
  password  String                          // 암호화(해시)된 비밀번호
  createdAt DateTime @default(now())        // 생성 시각 자동 기록
}

// 워크스페이스
model Workspace {
  id          String   @id @default(uuid()) // UUID 자동 생성
  name        String                        // 워크스페이스 이름
  imageUrl    String?                       // (선택) 대표 이미지 URL
  inviteCode  String   @unique              // 공유용 초대 코드(고유)
  userId      String                        // 생성자(Owner) User.id
  createdAt   DateTime @default(now())      // 생성 시각 자동 기록
  updatedAt   DateTime @updatedAt           // 업데이트 시각 자동 갱신
  identifier  String   @unique              // 워크스페이스 식별자
  color       String?                       // 워크스페이스 색상

  // 관계: 한 워크스페이스에 여러 멤버가 속한다
  members     Member[]                      // Member 테이블과 1:N
  projects    Project[]                     // Project 테이블과 1:N
}

// 워크스페이스 멤버
model Member {
  id          String   @id @default(uuid())  // UUID 자동 생성
  userId      String                         // 가입한 User.id
  workspaceId String                         // 속한 Workspace.id
  role        String                         // 권한: "admin" | "member"

  // 관계: 한 워크스페이스에 여러 멤버가 속한다
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
}

// 프로젝트
model Project {
  id           String   @id @default(uuid())         // 고유 ID
  name         String                                // 프로젝트 이름
  description  String?                               // 설명 (선택)
  workspaceId  String                                // 소속 워크스페이스
  userId       String                                // 생성자 ID
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  workspace    Workspace @relation(fields: [workspaceId], references: [id])
}

